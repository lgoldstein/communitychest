<?xml version="1.0" encoding="UTF-8"?>
<project name="maven-base" default="maven-base">
	<description>
		Serves as 'base' inclusion using Maven builds $Rev$
	</description>

	<!-- root of entire 'Community' project -->
	<dirname property="module.root.folder" file="${ant.file}"/>
	<property name="parent.folder.dir" value="${module.root.folder}" />
	<dirname property="community.root.dir" file="${parent.folder.dir}"/>
	<import file="${parent.folder.dir}${file.separator}build-base.xml" />

	<!-- ++++++++++++ Maven related properties definitions +++++++++++++ -->
	<property name="maven.base.name" value="maven" />
	<property name="maven.archiver.sub.folder.name" value="${maven.base.name}-archiver" />
	<property name="maven.repository.root.folder.name" value=".m2" />
	<property name="maven.repository.sub.folder.name" value="repository" />
	<property name="maven.settings.file.name" value="settings.xml" />
	<property name="maven.pom.file.name" value="pom.xml" />
	<property name="maven.install.version" value="3.0" />
	<property name="maven.install.location" value="${env.M2_HOME}" />
	<condition property="mvn.exe.script.name" value="mvn.bat" else="mvn">
		<istrue value="${win32.local.shell}" />
	</condition>

	<property name="mvn.executable" value="${maven.install.location}${file.separator}bin${file.separator}${mvn.exe.script.name}" />
	<fail message="Cannot find ${mvn.executable} - check that M2_HOME environment variable set">
		<condition>
			<not>
				<available file="${mvn.executable}" type="file" />
			</not>
		</condition>
	</fail>

	<property name="maven.opts" value="-Xmx512m" />
	<condition property="maven.local.repository.folder" value="${env.M2_REPO}" else="${user.home}${file.separator}${maven.repository.root.folder.name}${file.separator}${maven.repository.sub.folder.name}">
		<isset property="env.M2_REPO" />
	</condition>

	<property name="community.parent.pom.file.path" value="${parent.folder.dir}${file.separator}pom.xml" />
	<!-- Procedure to execute the Maven script - SYNPOSIS:

			<antcall target='run-mvn'>
				<param name='mvn.run.dir' value='wwww' />
				<param name='mvn.run.opts' value='xxxxxx'/>
				<param name='mvn.arg.line' value='yyyyy'/>
			</antcall>
			
			Where:
			
				mvn.run.dir - folder to be used as CWD when running the script
				mvn.run.opts - options to be set to MAVEN_OPTS (e.g., -Xmx128)
				mvn.arg.line - line to be passed as argument to the invocation
		-->
	<target name="run-mvn">
		<exec executable="${mvn.executable}" failonerror="true" dir="${mvn.run.dir}">
			<env key="MAVEN_OPTS" value="${mvn.run.opts}" />
			<!-- arg line="-s ${maven.settings.file.path}" / -->
			<arg line="${mvn.arg.line}" />
		</exec>
	</target>

	<property name="maven.module.options" value="-Xmx728m" />
	<property name="maven.full.test.options" value="-Dmaven.test.haltafterfailure=true -Dmaven.test.failure.ignore=false -Dmaven.test.error.ignore=false" />
	<target name="run-module-mvn">
		<antcall target='run-mvn'>
			<param name='mvn.run.dir' value='${module.root.folder}' />
			<param name='mvn.run.opts' value='${maven.module.options}'/>
			<param name='mvn.arg.line' value='install'/>
		</antcall>
	</target>
	<target name="clean-module-mvn">
		<antcall target='run-mvn'>
			<param name='mvn.run.dir' value='${module.root.folder}' />
			<param name='mvn.run.opts' value='${maven.module.options}'/>
			<param name='mvn.arg.line' value='clean'/>
		</antcall>
	</target>
	
	<target name="maven-base" depends="community-base" />
</project>